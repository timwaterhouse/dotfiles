set bell-style none
set editing-mode vi
set keyseq-timeout 500

# Immediately add a trailing slash when autocompleting symlinks to directories
set mark-symlinked-directories on

# Use the text that has already been typed as the prefix for searching through
# commands (i.e. more intelligent Up/Down behavior)
"\e[A": history-search-backward
"\e[B": history-search-forward
"\C-p": history-search-backward
"\C-n": history-search-forward

# List all matches in case multiple possible completions are possible
set show-all-if-ambiguous on

# Make Tab autocomplete regardless of filename case
set completion-ignore-case on

# Show extra file information when completing, like `ls -F` does
set visible-stats on

# Show whether prompt is in insert or command mode
set show-mode-in-prompt on
set vi-cmd-mode-string \1\e[0m\e[31m\2(c)\1\e[0m\2
set vi-ins-mode-string \1\e[0m\e[34m\2(i)\1\e[0m\2

#set vi-cmd-mode-string \1\e[0m\2::: \1\e[7m\2
#set vi-ins-mode-string \1\e[0m\2>>> \1\e[0m\2

# Block cursor for command mode, bar for insert mode
#set vi-cmd-mode-string \1\e[2 q\e[31m\2(c)\1\e[0m\2
#set vi-ins-mode-string \1\e[6 q\e[34m\2(i)\1\e[0m\2

$if mode=vi
  set keymap vi-command

  set keymap vi-insert
  "jk": vi-movement-mode  # remap escape
$endif
# switch to block cursor before executing a command
#RETURN: "\e\n"

# Be more intelligent when autocompleting by also looking at the text after
# the cursor. For example, when the current line is "cd ~/src/mozil", and
# the cursor is on the "z", pressing Tab will not autocomplete it to "cd
# ~/src/mozillail", but to "cd ~/src/mozilla". (This is supported by the
# Readline used by Bash 4.)
set skip-completed-text on

# Allow UTF-8 input and output, instead of showing stuff like $'\0123\0456'
set input-meta on
set output-meta on
set convert-meta off

